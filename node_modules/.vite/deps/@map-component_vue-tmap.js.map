{
  "version": 3,
  "sources": ["../../@map-component/vue-tmap/dist/index.js"],
  "sourcesContent": ["import { defineComponent, ref, onMounted, onUnmounted, watch, provide, h, inject, toRaw, computed } from \"vue\";\nfunction loadSDK(version, key, libraries) {\n  const libs = [\"visualization\", \"tools\", \"geometry\", ...libraries || []];\n  return new Promise((resolve) => {\n    if (window.TMap) {\n      resolve(window.TMap);\n      return;\n    }\n    window.tmapCallback = function tmapCallback() {\n      resolve(window.TMap);\n    };\n    if (window.__POWERED_BY_QIANKUN__ && top) {\n      top.tmapCallback = function tmapCallback() {\n        resolve(TMap);\n      };\n    }\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = `https://map.qq.com/api/gljs?v=${version}&key=${key}&libraries=${libs.join(\n      \",\"\n    )}&callback=tmapCallback`;\n    document.body.appendChild(script);\n  });\n}\nfunction setMapCtrl(mapIns, ctrlId, config, positionMap) {\n  if (!config) {\n    mapIns.removeControl(ctrlId);\n    return;\n  }\n  const ctrl = mapIns.getControl(ctrlId);\n  const { position, className } = config;\n  if (positionMap[position]) {\n    ctrl.setPosition(positionMap[position]);\n  }\n  ctrl.setClassName(className);\n}\nvar TMap$1 = defineComponent({\n  name: \"tmap-map\",\n  props: {\n    version: {\n      type: String,\n      default: \"1.exp\"\n    },\n    mapKey: {\n      type: String,\n      default: \"\"\n    },\n    libraries: {\n      type: Array,\n      default: () => []\n    },\n    class: {\n      type: String,\n      default: \"\"\n    },\n    style: {\n      type: Object,\n      default: () => ({})\n    },\n    center: {\n      type: Object,\n      default: () => ({ lat: 40.040452, lng: 116.273486 })\n    },\n    zoom: {\n      type: Number,\n      default: 17\n    },\n    minZoom: {\n      type: Number,\n      default: 3\n    },\n    maxZoom: {\n      type: Number,\n      default: 20\n    },\n    rotation: {\n      type: Number,\n      default: 0\n    },\n    pitch: {\n      type: Number,\n      default: 0\n    },\n    scale: {\n      type: Number,\n      default: 1\n    },\n    offset: {\n      type: Object,\n      default: () => ({ x: 0, y: 0 })\n    },\n    draggable: {\n      type: Boolean,\n      default: true\n    },\n    scrollable: {\n      type: Boolean,\n      default: true\n    },\n    doubleClickZoom: {\n      type: Boolean,\n      default: true\n    },\n    boundary: {\n      type: Object,\n      default: null\n    },\n    mapStyleId: {\n      type: String\n    },\n    baseMap: {\n      type: Object\n    },\n    viewMode: {\n      type: String,\n      default: \"3D\"\n    },\n    control: {\n      type: Object,\n      default: () => ({ scale: {}, zoom: {}, rotation: {} })\n    },\n    events: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const el = ref(null);\n    const map = ref(null);\n    let mapIns;\n    let positionMap;\n    const events = [];\n    Object.keys(props.events).forEach((eventName) => {\n      events.push(eventName);\n    });\n    onMounted(async () => {\n      await loadSDK(props.version, props.mapKey, props.libraries);\n      positionMap = {\n        topLeft: TMap.constants.CONTROL_POSITION.TOP_LEFT,\n        topCenter: TMap.constants.CONTROL_POSITION.TOP_CENTER,\n        topRight: TMap.constants.CONTROL_POSITION.TOP_RIGHT,\n        centerLeft: TMap.constants.CONTROL_POSITION.CENTER_LEFT,\n        center: TMap.constants.CONTROL_POSITION.CENTER,\n        centerRight: TMap.constants.CONTROL_POSITION.CENTER_RIGHT,\n        bottomLeft: TMap.constants.CONTROL_POSITION.BOTTOM_LEFT,\n        bottomCenter: TMap.constants.CONTROL_POSITION.BOTTOM_CENTER,\n        bottomRight: TMap.constants.CONTROL_POSITION.BOTTOM_RIGHT\n      };\n      const center = new TMap.LatLng(props.center.lat, props.center.lng);\n      if (el.value) {\n        mapIns = new TMap.Map(el.value, {\n          center,\n          zoom: props.zoom,\n          minZoom: props.minZoom,\n          maxZoom: props.maxZoom,\n          rotation: props.rotation,\n          pitch: props.pitch,\n          scale: props.scale,\n          offset: props.offset,\n          draggable: props.draggable,\n          scrollable: props.scrollable,\n          doubleClickZoom: props.doubleClickZoom,\n          boundary: props.boundary,\n          mapStyleId: props.mapStyleId,\n          baseMap: props.baseMap,\n          viewMode: props.viewMode,\n          showControl: true\n        });\n        setMapCtrl(\n          mapIns,\n          TMap.constants.DEFAULT_CONTROL_ID.SCALE,\n          props.control.scale,\n          positionMap\n        );\n        setMapCtrl(\n          mapIns,\n          TMap.constants.DEFAULT_CONTROL_ID.ZOOM,\n          props.control.zoom,\n          positionMap\n        );\n        setMapCtrl(\n          mapIns,\n          TMap.constants.DEFAULT_CONTROL_ID.ROTATION,\n          props.control.rotation,\n          positionMap\n        );\n        events.forEach((eventName) => {\n          mapIns.on(eventName, props.events[eventName]);\n        });\n        map.value = mapIns;\n      }\n    });\n    onUnmounted(() => {\n      if (mapIns) {\n        events.forEach((eventName) => {\n          mapIns.off(eventName, props.events[eventName]);\n        });\n        mapIns.destroy();\n      }\n    });\n    watch(\n      () => [props.center, props.zoom, props.rotation, props.pitch],\n      ([center, zoom, rotation, pitch]) => {\n        if (mapIns) {\n          mapIns.easeTo(\n            {\n              center: new TMap.LatLng(center.lat, center.lng),\n              zoom,\n              rotation,\n              pitch\n            },\n            {\n              duration: 500\n            }\n          );\n        }\n      }\n    );\n    watch(\n      () => props.scale,\n      (value) => mapIns && mapIns.setScale(value)\n    );\n    watch(\n      () => props.offset,\n      (value) => mapIns && mapIns.setOffset(value)\n    );\n    watch(\n      () => props.draggable,\n      (value) => mapIns && mapIns.setDraggable(value)\n    );\n    watch(\n      () => props.scrollable,\n      (value) => mapIns && mapIns.setScrollable(value)\n    );\n    watch(\n      () => props.doubleClickZoom,\n      (value) => mapIns && mapIns.setDoubleClickZoom(value)\n    );\n    watch(\n      () => props.boundary,\n      (value) => mapIns && mapIns.setBoundary(value)\n    );\n    watch(\n      () => props.control,\n      (value) => {\n        setMapCtrl(\n          mapIns,\n          TMap.constants.DEFAULT_CONTROL_ID.SCALE,\n          value.scale,\n          positionMap\n        );\n        setMapCtrl(\n          mapIns,\n          TMap.constants.DEFAULT_CONTROL_ID.ZOOM,\n          value.zoom,\n          positionMap\n        );\n        setMapCtrl(\n          mapIns,\n          TMap.constants.DEFAULT_CONTROL_ID.ROTATION,\n          value.rotation,\n          positionMap\n        );\n      }\n    );\n    provide(\"map\", map);\n    return {\n      map,\n      el,\n      getCenter: () => mapIns == null ? void 0 : mapIns.getCenter(),\n      getZoom: () => mapIns == null ? void 0 : mapIns.getZoom()\n    };\n  },\n  render() {\n    return h(\n      \"div\",\n      {\n        class: this.class,\n        style: { ...this.style, height: \"100%\", width: \"100%\" },\n        ref: \"el\"\n      },\n      this.$slots.default && this.map ? this.$slots.default() : []\n    );\n  }\n});\nfunction useEvent(overlay, attrs, emit) {\n  const events = [];\n  const listeners = [];\n  Object.keys(attrs).forEach((attr) => {\n    if (attr.indexOf(\"on\") === 0) {\n      const eventName = attr[2].toLowerCase() + attr.slice(3);\n      events.push(eventName);\n      listeners.push(emit.bind(null, eventName));\n    }\n  });\n  events.forEach((eventName, i) => {\n    overlay.on(eventName, listeners[i]);\n  });\n  onUnmounted(() => {\n    events.forEach((eventName, i) => {\n      overlay.off(eventName, listeners[i]);\n    });\n  });\n}\nfunction useCleanUp(map, id) {\n  const overlay = map.getLayer(id);\n  if (overlay) {\n    overlay.setMap(null);\n  }\n  const oldOverlayBorder = map.getLayer(`${id}_border_line`);\n  if (oldOverlayBorder) {\n    oldOverlayBorder.setMap(null);\n  }\n  const overlayBorder = map.getLayer(`${id}_border`);\n  if (overlayBorder) {\n    overlayBorder.setMap(null);\n  }\n}\nfunction builtStyle$4(opt) {\n  const styled = {};\n  Object.keys(opt).forEach((k) => {\n    styled[k] = new TMap.MarkerStyle(opt[k]);\n  });\n  return styled;\n}\nfunction buildGeometries$2(geometries) {\n  return geometries.map((v) => ({\n    ...v,\n    position: new TMap.LatLng(v.position.lat, v.position.lng)\n  }));\n}\nvar MultiMarker = defineComponent({\n  name: \"tmap-multi-marker\",\n  props: {\n    id: {\n      type: String,\n      default: \"default\"\n    },\n    styles: {\n      type: Object,\n      required: true\n    },\n    geometries: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(props, { attrs, emit }) {\n    const map = inject(\"map\");\n    if (!map) {\n      return {};\n    }\n    const originMap = toRaw(map.value);\n    useCleanUp(originMap, props.id);\n    const markers = new TMap.MultiMarker({\n      id: props.id,\n      map: originMap,\n      styles: builtStyle$4(props.styles),\n      geometries: buildGeometries$2(props.geometries)\n    });\n    useEvent(markers, attrs, emit);\n    watch(\n      () => props.styles,\n      (styles) => {\n        markers.setStyles(builtStyle$4(styles));\n      }\n    );\n    watch(\n      () => props.geometries,\n      (geometries) => {\n        markers.setGeometries(buildGeometries$2(geometries));\n      }\n    );\n    onUnmounted(() => {\n      markers.setMap(null);\n    });\n    return {\n      getStyles: markers.getStyles,\n      moveAlong: markers.moveAlong.bind(markers),\n      stopMove: markers.stopMove.bind(markers),\n      pauseMove: markers.pauseMove.bind(markers),\n      resumeMove: markers.resumeMove.bind(markers),\n      on: markers.on.bind(markers)\n    };\n  },\n  render() {\n    return null;\n  }\n});\nvar MarkerCluster = defineComponent({\n  name: \"tmap-marker-cluster\",\n  props: {\n    id: {\n      type: String,\n      default: \"default\"\n    },\n    enableDefaultStyle: {\n      type: Boolean,\n      default: true\n    },\n    minimumClusterSize: {\n      type: Number,\n      default: 2\n    },\n    geometries: {\n      type: Array,\n      required: true\n    },\n    zoomOnClick: {\n      type: Boolean,\n      default: true\n    },\n    gridSize: {\n      type: Number,\n      default: 60\n    },\n    averageCenter: {\n      type: Boolean,\n      default: false\n    },\n    maxZoom: {\n      type: Number,\n      default: 20\n    }\n  },\n  setup(props) {\n    const map = inject(\"map\");\n    if (!map) {\n      return {};\n    }\n    const markers = new TMap.MarkerCluster({\n      id: props.id,\n      map: toRaw(map.value),\n      enableDefaultStyle: props.enableDefaultStyle,\n      minimumClusterSize: props.minimumClusterSize,\n      geometries: buildGeometries$2(props.geometries),\n      zoomOnClick: props.zoomOnClick,\n      gridSize: props.gridSize,\n      averageCenter: props.averageCenter,\n      maxZoom: props.maxZoom\n    });\n    watch(\n      () => props.geometries,\n      (geometries) => {\n        markers.setGeometries(buildGeometries$2(geometries));\n      }\n    );\n    return {};\n  },\n  render() {\n    return null;\n  }\n});\nfunction builtStyle$3(opt) {\n  const styled = {};\n  Object.keys(opt).forEach((k) => {\n    styled[k] = new TMap.PolylineStyle(opt[k]);\n  });\n  return styled;\n}\nfunction buildGeometries$1(geometries) {\n  return geometries.map((v) => {\n    return {\n      ...v,\n      paths: v.paths.map((p) => new TMap.LatLng(p.lat, p.lng))\n    };\n  });\n}\nvar MultiPolyline = defineComponent({\n  name: \"tmap-multi-polyline\",\n  props: {\n    id: {\n      type: String,\n      default: \"default\"\n    },\n    zIndex: {\n      type: Number,\n      default: 1\n    },\n    styles: {\n      type: Object,\n      required: true\n    },\n    geometries: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(props, { attrs, emit }) {\n    const map = inject(\"map\");\n    if (!map) {\n      return {};\n    }\n    const originMap = toRaw(map.value);\n    useCleanUp(originMap, props.id);\n    const polyline = new TMap.MultiPolyline({\n      id: props.id,\n      map: originMap,\n      zIndex: props.zIndex,\n      styles: builtStyle$3(props.styles),\n      geometries: buildGeometries$1(props.geometries)\n    });\n    useEvent(polyline, attrs, emit);\n    watch(\n      () => props.zIndex,\n      (zIndex) => {\n        polyline.setZIndex(zIndex);\n      }\n    );\n    watch(\n      () => props.styles,\n      (styles) => {\n        polyline.setStyles(builtStyle$3(styles));\n      }\n    );\n    watch(\n      () => props.geometries,\n      (geometries) => {\n        polyline.setGeometries(buildGeometries$1(geometries));\n      }\n    );\n    onUnmounted(() => {\n      polyline.setMap(null);\n    });\n    return {};\n  },\n  render() {\n    return null;\n  }\n});\nfunction keyBy(collection, iteratee) {\n  return collection.reduce((result, value) => {\n    const key = value[iteratee];\n    result[key] = value;\n    return result;\n  }, {});\n}\nfunction equalPolygonGeometry(a, b) {\n  var _a, _b;\n  if (a.id !== b.id) {\n    return false;\n  }\n  if (a.styleId !== b.styleId) {\n    return false;\n  }\n  if (a.rank !== b.rank) {\n    return false;\n  }\n  if (a.paths.length === b.paths.length) {\n    if (JSON.stringify(a.paths) !== JSON.stringify(b.paths)) {\n      return false;\n    }\n  } else {\n    return false;\n  }\n  if (a.properties !== void 0 && b.properties !== void 0) {\n    const aPropertyKeys = Object.keys(a.properties || {});\n    const bPropertyKeys = Object.keys(b.properties || {});\n    if (aPropertyKeys.length !== bPropertyKeys.length) {\n      return false;\n    }\n    for (let i = aPropertyKeys.length - 1; i >= 0; i -= 1) {\n      const key = aPropertyKeys[i];\n      if (((_a = a.properties) == null ? void 0 : _a[key]) !== ((_b = b.properties) == null ? void 0 : _b[key])) {\n        return false;\n      }\n    }\n  } else if (a.properties !== b.properties) {\n    return false;\n  }\n  return true;\n}\nfunction builtStyle$2(opt) {\n  const styled = {};\n  Object.keys(opt).forEach((k) => {\n    styled[k] = new TMap.PolygonStyle(opt[k]);\n  });\n  return styled;\n}\nfunction buildGeometries(geometries) {\n  return geometries.map((v) => {\n    return {\n      ...v,\n      paths: v.paths.map((p) => new TMap.LatLng(p.lat, p.lng))\n    };\n  });\n}\nvar MultiPolygon = defineComponent({\n  name: \"tmap-multi-polygon\",\n  props: {\n    id: {\n      type: String,\n      default: \"default\"\n    },\n    zIndex: {\n      type: Number,\n      default: 1\n    },\n    styles: {\n      type: Object,\n      required: true\n    },\n    geometries: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(props, { attrs, emit }) {\n    const map = inject(\"map\");\n    if (!map) {\n      return {};\n    }\n    const originMap = toRaw(map.value);\n    let currentGeometries = props.geometries;\n    useCleanUp(originMap, props.id);\n    const polygon = new TMap.MultiPolygon({\n      id: props.id,\n      map: originMap,\n      zIndex: props.zIndex,\n      styles: builtStyle$2(props.styles),\n      geometries: buildGeometries(currentGeometries)\n    });\n    useEvent(polygon, attrs, emit);\n    watch(\n      () => props.zIndex,\n      (zIndex) => {\n        polygon.setZIndex(zIndex);\n      }\n    );\n    watch(\n      () => props.styles,\n      (styles) => {\n        polygon.setStyles(builtStyle$2(styles));\n      }\n    );\n    watch(\n      () => props.geometries,\n      (geometries) => {\n        const currentGeometriesMap = keyBy(currentGeometries, \"id\");\n        const toDelete = new Set(Object.keys(currentGeometriesMap));\n        const toAddOrModify = [];\n        geometries.forEach((v) => {\n          if (currentGeometriesMap[v.id]) {\n            toDelete.delete(v.id);\n            if (!equalPolygonGeometry(currentGeometriesMap[v.id], v)) {\n              toAddOrModify.push(v);\n            }\n          } else {\n            toAddOrModify.push(v);\n          }\n        });\n        currentGeometries = geometries;\n        if (toDelete.size > 0) {\n          polygon.remove([...toDelete]);\n        }\n        if (toAddOrModify.length > 0) {\n          polygon.updateGeometries(buildGeometries(geometries));\n        }\n      }\n    );\n    provide(\"geometry\", polygon);\n    onUnmounted(() => {\n      polygon.setMap(null);\n    });\n    return {};\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : null;\n  }\n});\nfunction builtStyle$1(opt) {\n  const styled = {};\n  Object.keys(opt).forEach((k) => {\n    styled[k] = new TMap.LabelStyle(opt[k]);\n  });\n  return styled;\n}\nvar MultiLabel = defineComponent({\n  name: \"tmap-multi-label\",\n  props: {\n    id: {\n      type: String,\n      default: \"default\"\n    },\n    styles: {\n      type: Object,\n      required: true\n    },\n    geometries: {\n      type: Array,\n      required: true\n    },\n    enableCollision: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n  setup(props, { attrs, emit }) {\n    const map = inject(\"map\");\n    if (!map) {\n      return {};\n    }\n    const originMap = toRaw(map.value);\n    useCleanUp(originMap, props.id);\n    const getResGeo = (geo) => geo.map((item) => ({\n      ...item,\n      position: new TMap.LatLng(item.position.lat, item.position.lng)\n    }));\n    const labelInstance = new TMap.MultiLabel({\n      id: props.id,\n      map: toRaw(map.value),\n      styles: builtStyle$1(props.styles),\n      geometries: getResGeo(props.geometries),\n      enableCollision: props.enableCollision\n    });\n    useEvent(labelInstance, attrs, emit);\n    watch(\n      () => props.styles,\n      (styles) => {\n        labelInstance.setStyles(builtStyle$1(styles));\n      }\n    );\n    watch(\n      () => props.geometries,\n      (r) => {\n        labelInstance.setGeometries(getResGeo(r));\n      }\n    );\n    onUnmounted(() => {\n      labelInstance.setMap(null);\n    });\n    return {};\n  },\n  render() {\n    return null;\n  }\n});\nfunction builtStyle(opt) {\n  const styled = {};\n  Object.keys(opt).forEach((k) => {\n    styled[k] = new TMap.CircleStyle(opt[k]);\n  });\n  return styled;\n}\nvar MultiCircle = defineComponent({\n  name: \"tmap-multi-circle\",\n  props: {\n    id: {\n      type: String,\n      default: \"default\"\n    },\n    zIndex: {\n      type: Number,\n      default: 1\n    },\n    styles: {\n      type: Object,\n      required: true\n    },\n    geometries: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(props, { attrs, emit }) {\n    const map = inject(\"map\");\n    if (!map) {\n      return {};\n    }\n    const originMap = toRaw(map.value);\n    useCleanUp(originMap, props.id);\n    const getResGeo = (geo) => geo.map((item) => ({\n      ...item,\n      center: new TMap.LatLng(item.center.lat, item.center.lng)\n    }));\n    const circle = new TMap.MultiCircle({\n      id: props.id,\n      map: originMap,\n      styles: builtStyle(props.styles),\n      geometries: getResGeo(props.geometries),\n      zIndex: 1\n    });\n    useEvent(circle, attrs, emit);\n    watch(\n      () => props.zIndex,\n      (zIndex) => {\n        circle.setZIndex(zIndex);\n      }\n    );\n    watch(\n      () => props.styles,\n      (styles) => {\n        circle.setStyles(builtStyle(styles));\n      }\n    );\n    watch(\n      () => props.geometries,\n      (r) => {\n        circle.setGeometries(getResGeo(r));\n      }\n    );\n    onUnmounted(() => {\n      circle.setMap(null);\n    });\n    return {};\n  },\n  render() {\n    return null;\n  }\n});\nconst getLatLng$1 = (latlngData) => {\n  return new TMap.LatLng(latlngData.lat, latlngData.lng);\n};\nvar InfoWindow = defineComponent({\n  name: \"tmap-info-window\",\n  props: {\n    id: {\n      type: String,\n      default: \"default\"\n    },\n    visible: {\n      type: Boolean,\n      required: true\n    },\n    position: {\n      type: Object,\n      required: true\n    },\n    content: {\n      type: String,\n      required: true\n    },\n    zIndex: {\n      type: Number,\n      required: false,\n      default: 0\n    },\n    offset: {\n      type: Object,\n      required: false,\n      default: () => ({ x: 0, y: 0 })\n    },\n    enableCustom: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n  emits: [\"close-click\"],\n  setup(props, { emit }) {\n    const map = inject(\"map\");\n    if (!map) {\n      return {};\n    }\n    const originMap = toRaw(map.value);\n    useCleanUp(originMap, props.id);\n    const center = getLatLng$1(props.position);\n    const infoWindow = new TMap.InfoWindow({\n      map: toRaw(map.value),\n      position: center,\n      content: props.content,\n      zIndex: props.zIndex,\n      offset: props.offset,\n      enableCustom: props.enableCustom\n    });\n    infoWindow.on(\"closeclick\", () => {\n      emit(\"close-click\");\n    });\n    watch(\n      () => props.visible,\n      (v) => {\n        if (v) {\n          infoWindow.open();\n        } else {\n          infoWindow.close();\n        }\n      }\n    );\n    watch(\n      () => props.content,\n      (v) => {\n        infoWindow.setContent(v);\n      }\n    );\n    watch(\n      () => props.position,\n      (v) => {\n        infoWindow.setPosition(getLatLng$1(v));\n      }\n    );\n    onUnmounted(() => {\n      infoWindow.destroy();\n    });\n    return {};\n  },\n  render() {\n    return null;\n  }\n});\nvar PolygonEditor = defineComponent({\n  name: \"tmap-polygon-editor\",\n  props: {\n    id: {\n      type: String,\n      default: \"default\"\n    },\n    zIndex: {\n      type: Number,\n      default: 2\n    },\n    snappable: {\n      type: Boolean,\n      default: true\n    },\n    drawingStyleId: {\n      type: String,\n      default: \"drawing\"\n    },\n    selectedStyleId: {\n      type: String,\n      default: \"selected\"\n    },\n    styles: {\n      type: Object,\n      required: true\n    },\n    modelValue: {\n      type: Array,\n      required: true\n    },\n    actionMode: {\n      type: Number\n    }\n  },\n  emits: [\"update:modelValue\", \"select\", \"error\"],\n  setup(props, { emit }) {\n    const map = inject(\"map\");\n    if (!map) {\n      return {};\n    }\n    const originMap = toRaw(map.value);\n    useCleanUp(originMap, props.id);\n    const geometries = buildGeometries(props.modelValue);\n    const polygon = new TMap.MultiPolygon({\n      id: props.id,\n      map: originMap,\n      zIndex: props.zIndex,\n      styles: builtStyle$2(props.styles),\n      geometries\n    });\n    const editor = new TMap.tools.GeometryEditor({\n      map: originMap,\n      overlayList: [\n        {\n          overlay: polygon,\n          id: props.id,\n          drawingStyleId: props.drawingStyleId,\n          selectedStyleId: props.selectedStyleId\n        }\n      ],\n      actionMode: props.actionMode === 1 ? TMap.tools.constants.EDITOR_ACTION.INTERACT : TMap.tools.constants.EDITOR_ACTION.DRAW,\n      activeOverlayId: props.id,\n      selectable: true,\n      snappable: props.snappable\n    });\n    editor.on(\"select\", () => {\n      emit(\"select\", editor.getSelectedList());\n    });\n    editor.on(\"draw_complete\", (e) => {\n      emit(\"update:modelValue\", [...props.modelValue, e]);\n    });\n    editor.on(\"adjust_complete\", (e) => {\n      for (let i = props.modelValue.length - 1; i >= 0; i -= 1) {\n        if (props.modelValue[i].id === e.id) {\n          Object.assign(props.modelValue[i], e);\n          emit(\"update:modelValue\", [...props.modelValue]);\n          break;\n        }\n      }\n    });\n    editor.on(\"delete_complete\", (e) => {\n      const removedIds = e.map((v) => v.id);\n      emit(\n        \"update:modelValue\",\n        props.modelValue.filter((v) => removedIds.indexOf(v.id) === -1)\n      );\n      emit(\"select\", editor.getSelectedList());\n    });\n    editor.on(\"split_complete\", (e) => {\n      const activeOverlay = editor.getActiveOverlay();\n      emit(\"update:modelValue\", [\n        ...activeOverlay.overlay.getGeometries(),\n        ...e\n      ]);\n      emit(\"select\", editor.getSelectedList());\n    });\n    editor.on(\"union_complete\", (e) => {\n      const activeOverlay = editor.getActiveOverlay();\n      emit(\"update:modelValue\", [...activeOverlay.overlay.getGeometries(), e]);\n      emit(\"select\", editor.getSelectedList());\n    });\n    editor.on(\"split_fail\", (e) => {\n      emit(\"error\", e);\n    });\n    editor.on(\"union_fail\", (e) => {\n      emit(\"error\", e);\n    });\n    watch(\n      () => props.actionMode,\n      (actionMode) => {\n        const x = actionMode === 1 ? TMap.tools.constants.EDITOR_ACTION.INTERACT : TMap.tools.constants.EDITOR_ACTION.DRAW;\n        editor.setActionMode(x);\n      }\n    );\n    onUnmounted(() => {\n      polygon.setMap(null);\n      try {\n        editor.destroy();\n      } catch (e) {\n      }\n    });\n    return {\n      select: editor.select.bind(editor),\n      stop: editor.stop.bind(editor),\n      split: editor.split.bind(editor),\n      union: editor.union.bind(editor),\n      delete: editor.delete.bind(editor),\n      destroy: editor.destroy.bind(editor)\n    };\n  },\n  render() {\n    return null;\n  }\n});\nconst getLatLng = (latlngData) => {\n  return new TMap.LatLng(latlngData.lat, latlngData.lng);\n};\nvar DOMOverlay = defineComponent({\n  name: \"tmap-dom-overlay\",\n  props: {\n    id: {\n      type: String,\n      default: \"default\"\n    },\n    position: {\n      type: Object,\n      required: true\n    },\n    offset: {\n      type: Array,\n      required: false,\n      default: () => [0, 0]\n    }\n  },\n  setup(props, { slots }) {\n    const map = inject(\"map\");\n    if (!map) {\n      return {};\n    }\n    const originMap = toRaw(map.value);\n    useCleanUp(originMap, props.id);\n    const domRef = ref(document.createElement(\"div\"));\n    const position = computed(() => {\n      return getLatLng(getLatLng(props.position));\n    });\n    class DomClass extends TMap.DOMOverlay {\n      constructor(options) {\n        super(options);\n        this.map = options.map;\n        this.onInit(options);\n      }\n      onInit(options) {\n        this.ele = options.ele;\n      }\n      createDOM() {\n        return this.ele;\n      }\n      updateDOM() {\n        const pixel = this.map.projectToContainer(position.value);\n        const left = `${pixel.getX() - this.ele.clientWidth / 2 + props.offset[0]}px`;\n        const top2 = `${pixel.getY() - this.ele.clientHeight / 2 + props.offset[1]}px`;\n        this.ele.setAttribute(\n          \"style\",\n          `top: ${top2}; left: ${left}; position: absolute;`\n        );\n      }\n      onDestroy() {\n        this.ele.innerHTML = \"\";\n      }\n    }\n    let domIns;\n    onMounted(() => {\n      domIns = new DomClass({\n        map: map.value,\n        ele: domRef.value\n      });\n    });\n    watch(\n      () => props.position,\n      () => {\n        domIns.updateDOM();\n      }\n    );\n    onUnmounted(() => {\n      domIns.onDestroy();\n    });\n    return () => h(\n      \"span\",\n      {\n        ref: domRef\n      },\n      slots.default ? slots.default() : []\n    );\n  }\n});\nconst components = [\n  TMap$1,\n  MultiMarker,\n  MarkerCluster,\n  MultiPolygon,\n  MultiPolyline,\n  MultiLabel,\n  MultiCircle,\n  InfoWindow,\n  PolygonEditor,\n  DOMOverlay\n];\nconst install = (Vue) => {\n  components.forEach((Component) => {\n    Vue.component(Component.name, Component);\n  });\n};\nexport { DOMOverlay, InfoWindow, MarkerCluster, MultiCircle, MultiLabel, MultiMarker, MultiPolygon, MultiPolyline, PolygonEditor, TMap$1 as TMap, install as default };\n"],
  "mappings": ";;;AAAA,SAAS,iBAAiB,KAAK,WAAW,aAAa,OAAO,SAAS,GAAG,QAAQ,OAAO,gBAAgB;AACzG,SAAS,QAAQ,SAAS,KAAK,WAAW;AACxC,QAAM,OAAO,CAAC,iBAAiB,SAAS,YAAY,GAAG,aAAa,CAAC,CAAC;AACtE,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,QAAI,OAAO,MAAM;AACf,cAAQ,OAAO,IAAI;AACnB;AAAA,IACF;AACA,WAAO,eAAe,SAAS,eAAe;AAC5C,cAAQ,OAAO,IAAI;AAAA,IACrB;AACA,QAAI,OAAO,0BAA0B,KAAK;AACxC,UAAI,eAAe,SAAS,eAAe;AACzC,gBAAQ,IAAI;AAAA,MACd;AAAA,IACF;AACA,UAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,WAAO,OAAO;AACd,WAAO,MAAM,iCAAiC,eAAe,iBAAiB,KAAK;AAAA,MACjF;AAAA,IACF;AACA,aAAS,KAAK,YAAY,MAAM;AAAA,EAClC,CAAC;AACH;AACA,SAAS,WAAW,QAAQ,QAAQ,QAAQ,aAAa;AACvD,MAAI,CAAC,QAAQ;AACX,WAAO,cAAc,MAAM;AAC3B;AAAA,EACF;AACA,QAAM,OAAO,OAAO,WAAW,MAAM;AACrC,QAAM,EAAE,UAAU,UAAU,IAAI;AAChC,MAAI,YAAY,QAAQ,GAAG;AACzB,SAAK,YAAY,YAAY,QAAQ,CAAC;AAAA,EACxC;AACA,OAAK,aAAa,SAAS;AAC7B;AACA,IAAI,SAAS,gBAAgB;AAAA,EAC3B,MAAM;AAAA,EACN,OAAO;AAAA,IACL,SAAS;AAAA,MACP,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,SAAS,MAAM,CAAC;AAAA,IAClB;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS,OAAO,CAAC;AAAA,IACnB;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,SAAS,OAAO,EAAE,KAAK,WAAW,KAAK,WAAW;AAAA,IACpiBAAiB;AAAA,MACf,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,IACR;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,IACR;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,SAAS,OAAO,EAAE,OAAO,CAAC,GAAG,MAAM,CAAC,GAAG,UAAU,CAAC,EAAE;AAAA,IACtD;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,SAAS,OAAO,CAAC;AAAA,IACnB;AAAA,EACF;AAAA,EACA,MAAM,OAAO;AACX,UAAM,KAAK,IAAI,IAAI;AACnB,UAAM,MAAM,IAAI,IAAI;AACpB,QAAI;AACJ,QAAI;AACJ,UAAM,SAAS,CAAC;AAChB,WAAO,KAAK,MAAM,MAAM,EAAE,QAAQ,CAAC,cAAc;AAC/C,aAAO,KAAK,SAAS;AAAA,IACvB,CAAC;AACD,cAAU,YAAY;AACpB,YAAM,QAAQ,MAAM,SAAS,MAAM,QAAQ,MAAM,SAAS;AAC1D,oBAAc;AAAA,QACZ,SAAS,KAAK,UAAU,iBAAiB;AAAA,QACzC,WAAW,KAAK,UAAU,iBAAiB;AAAA,QAC3C,UAAU,KAAK,UAAU,iBAAiB;AAAA,QAC1C,YAAY,KAAK,UAAU,iBAAiB;AAAA,QAC5C,QAAQ,KAAK,UAAU,iBAAiB;AAAA,QACxC,aAAa,KAAK,UAAU,iBAAiB;AAAA,QAC7C,YAAY,KAAK,UAAU,iBAAiB;AAAA,QAC5C,cAAc,KAAK,UAAU,iBAAiB;AAAA,QAC9C,aAAa,KAAK,UAAU,iBAAiB;AAAA,MAC/C;AACA,YAAM,SAAS,IAAI,KAAK,OAAO,MAAM,OAAO,KAAK,MAAM,OAAO,GAAG;AACjE,UAAI,GAAG,OAAO;AACZ,iBAAS,IAAI,KAAK,IAAI,GAAG,OAAO;AAAA,UAC9B;AAAA,UACA,MAAM,MAAM;AAAA,UACZ,SAAS,MAAM;AAAA,UACf,SAAS,MAAM;AAAA,UACf,UAAU,MAAM;AAAA,UAChB,OAAO,MAAM;AAAA,UACb,OAAO,MAAM;AAAA,UACb,QAAQ,MAAM;AAAA,UACd,WAAW,MAAM;AAAA,UACjB,YAAY,MAAM;AAAA,UAClB,iBAAiB,MAAM;AAAA,UACvB,UAAU,MAAM;AAAA,UAChB,YAAY,MAAM;AAAA,UAClB,SAAS,MAAM;AAAA,UACf,UAAU,MAAM;AAAA,UAChB,aAAa;AAAA,QACf,CAAC;AACD;AAAA,UACE;AAAA,UACA,KAAK,UAAU,mBAAmB;AAAA,UAClC,MAAM,QAAQ;AAAA,UACd;AAAA,QACF;AACA;AAAA,UACE;AAAA,UACA,KAAK,UAAU,mBAAmB;AAAA,UAClC,MAAM,QAAQ;AAAA,UACd;AAAA,QACF;AACA;AAAA,UACE;AAAA,UACA,KAAK,UAAU,mBAAmB;AAAA,UAClC,MAAM,QAAQ;AAAA,UACd;AAAA,QACF;AACA,eAAO,QAAQ,CAAC,cAAc;AAC5B,iBAAO,GAAG,WAAW,MAAM,OAAO,SAAS,CAAC;AAAA,QAC9C,CAAC;AACD,YAAI,QAAQ;AAAA,MACd;AAAA,IACF,CAAC;AACD,gBAAY,MAAM;AAChB,UAAI,QAAQ;AACV,eAAO,QAAQ,CAAC,cAAc;AAC5B,iBAAO,IAAI,WAAW,MAAM,OAAO,SAAS,CAAC;AAAA,QAC/C,CAAC;AACD,eAAO,QAAQ;AAAA,MACjB;AAAA,IACF,CAAC;AACD;AAAA,MACE,MAAM,CAAC,MAAM,QAAQ,MAAM,MAAM,MAAM,UAAU,MAAM,KAAK;AAAA,MAC5D,CAAC,CAAC,QAAQ,MAAM,UAAU,KAAK,MAAM;AACnC,YAAI,QAAQ;AACV,iBAAO;AAAA,YACL;AAAA,cACE,QAAQ,IAAI,KAAK,OAAO,OAAO,KAAK,OAAO,GAAG;AAAA,cAC9C;AAAA,cACA;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE,UAAU;AAAA,YACZ;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,UAAU,UAAU,OAAO,SAAS,KAAK;AAAA,IAC5C;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,UAAU,UAAU,OAAO,UAAU,KAAK;AAAA,IAC7C;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,UAAU,UAAU,OAAO,aAAa,KAAK;AAAA,IAChD;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,UAAU,UAAU,OAAO,cAAc,KAAK;AAAA,IACjD;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,UAAU,UAAU,OAAO,mBAAmB,KAAK;AAAA,IACtD;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,UAAU,UAAU,OAAO,YAAY,KAAK;AAAA,IAC/C;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,UAAU;AACT;AAAA,UACE;AAAA,UACA,KAAK,UAAU,mBAAmB;AAAA,UAClC,MAAM;AAAA,UACN;AAAA,QACF;AACA;AAAA,UACE;AAAA,UACA,KAAK,UAAU,mBAAmB;AAAA,UAClC,MAAM;AAAA,UACN;AAAA,QACF;AACA;AAAA,UACE;AAAA,UACA,KAAK,UAAU,mBAAmB;AAAA,UAClC,MAAM;AAAA,UACN;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,YAAQ,OAAO,GAAG;AAClB,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,WAAW,MAAM,UAAU,OAAO,SAAS,OAAO,UAAU;AAAA,MAC5D,SAAS,MAAM,UAAU,OAAO,SAAS,OAAO,QAAQ;AAAA,IAC1D;AAAA,EACF;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL;AAAA,MACA;AAAA,QACE,OAAO,KAAK;AAAA,QACZ,OAAO,EAAE,GAAG,KAAK,OAAO,QAAQ,QAAQ,OAAO,OAAO;AAAA,QACtD,KAAK;AAAA,MACP;AAAA,MACA,KAAK,OAAO,WAAW,KAAK,MAAM,KAAK,OAAO,QAAQ,IAAI,CAAC;AAAA,IAC7D;AAAA,EACF;AACF,CAAC;AACD,SAAS,SAAS,SAAS,OAAO,MAAM;AACtC,QAAM,SAAS,CAAC;AAChB,QAAM,YAAY,CAAC;AACnB,SAAO,KAAK,KAAK,EAAE,QAAQ,CAAC,SAAS;AACnC,QAAI,KAAK,QAAQ,IAAI,MAAM,GAAG;AAC5B,YAAM,YAAY,KAAK,CAAC,EAAE,YAAY,IAAI,KAAK,MAAM,CAAC;AACtD,aAAO,KAAK,SAAS;AACrB,gBAAU,KAAK,KAAK,KAAK,MAAM,SAAS,CAAC;AAAA,IAC3C;AAAA,EACF,CAAC;AACD,SAAO,QAAQ,CAAC,WAAW,MAAM;AAC/B,YAAQ,GAAG,WAAW,UAAU,CAAC,CAAC;AAAA,EACpC,CAAC;AACD,cAAY,MAAM;AAChB,WAAO,QAAQ,CAAC,WAAW,MAAM;AAC/B,cAAQ,IAAI,WAAW,UAAU,CAAC,CAAC;AAAA,IACrC,CAAC;AAAA,EACH,CAAC;AACH;AACA,SAAS,WAAW,KAAK,IAAI;AAC3B,QAAM,UAAU,IAAI,SAAS,EAAE;AAC/B,MAAI,SAAS;AACX,YAAQ,OAAO,IAAI;AAAA,EACrB;AACA,QAAM,mBAAmB,IAAI,SAAS,GAAG,gBAAgB;AACzD,MAAI,kBAAkB;AACpB,qBAAiB,OAAO,IAAI;AAAA,EAC9B;AACA,QAAM,gBAAgB,IAAI,SAAS,GAAG,WAAW;AACjD,MAAI,eAAe;AACjB,kBAAc,OAAO,IAAI;AAAA,EAC3B;AACF;AACA,SAAS,aAAa,KAAK;AACzB,QAAM,SAAS,CAAC;AAChB,SAAO,KAAK,GAAG,EAAE,QAAQ,CAAC,MAAM;AAC9B,WAAO,CAAC,IAAI,IAAI,KAAK,YAAY,IAAI,CAAC,CAAC;AAAA,EACzC,CAAC;AACD,SAAO;AACT;AACA,SAAS,kBAAkB,YAAY;AACrC,SAAO,WAAW,IAAI,CAAC,OAAO;AAAA,IAC5B,GAAG;AAAA,IACH,UAAU,IAAI,KAAK,OAAO,EAAE,SAAS,KAAK,EAAE,SAAS,GAAG;AAAA,EAC1D,EAAE;AACJ;AACA,IAAI,cAAc,gBAAgB;AAAA,EAChC,MAAM;AAAA,EACN,OAAO;AAAA,IACL,IAAI;AAAA,MACF,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,MAAM,OAAO,EAAE,OAAO,KAAK,GAAG;AAC5B,UAAM,MAAM,OAAO,KAAK;AACxB,QAAI,CAAC,KAAK;AACR,aAAO,CAAC;AAAA,IACV;AACA,UAAM,YAAY,MAAM,IAAI,KAAK;AACjC,eAAW,WAAW,MAAM,EAAE;AAC9B,UAAM,UAAU,IAAI,KAAK,YAAY;AAAA,MACnC,IAAI,MAAM;AAAA,MACV,KAAK;AAAA,MACL,QAAQ,aAAa,MAAM,MAAM;AAAA,MACjC,YAAY,kBAAkB,MAAM,UAAU;AAAA,IAChD,CAAC;AACD,aAAS,SAAS,OAAO,IAAI;AAC7B;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,WAAW;AACV,gBAAQ,UAAU,aAAa,MAAM,CAAC;AAAA,MACxC;AAAA,IACF;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,eAAe;AACd,gBAAQ,cAAc,kBAAkB,UAAU,CAAC;AAAA,MACrD;AAAA,IACF;AACA,gBAAY,MAAM;AAChB,cAAQ,OAAO,IAAI;AAAA,IACrB,CAAC;AACD,WAAO;AAAA,MACL,WAAW,QAAQ;AAAA,MACnB,WAAW,QAAQ,UAAU,KAAK,OAAO;AAAA,MACzC,UAAU,QAAQ,SAAS,KAAK,OAAO;AAAA,MACvC,WAAW,QAAQ,UAAU,KAAK,OAAO;AAAA,MACzC,YAAY,QAAQ,WAAW,KAAK,OAAO;AAAA,MAC3C,IAAI,QAAQ,GAAG,KAAK,OAAO;AAAA,IAC7B;AAAA,EACF;AAAA,EACA,SAAS;AACP,WAAO;AAAA,EACT;AACF,CAAC;AACD,IAAI,gBAAgB,gBAAgB;AAAA,EAClC,MAAM;AAAA,EACN,OAAO;AAAA,IACL,IAAI;AAAA,MACF,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,oBAAoB;AAAA,MAClB,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,oBAAoB;AAAA,MAClB,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,eAAe;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,EACF;AAAA,EACA,MAAM,OAAO;AACX,UAAM,MAAM,OAAO,KAAK;AACxB,QAAI,CAAC,KAAK;AACR,aAAO,CAAC;AAAA,IACV;AACA,UAAM,UAAU,IAAI,KAAK,cAAc;AAAA,MACrC,IAAI,MAAM;AAAA,MACV,KAAK,MAAM,IAAI,KAAK;AAAA,MACpB,oBAAoB,MAAM;AAAA,MAC1B,oBAAoB,MAAM;AAAA,MAC1B,YAAY,kBAAkB,MAAM,UAAU;AAAA,MAC9C,aAAa,MAAM;AAAA,MACnB,UAAU,MAAM;AAAA,MAChB,eAAe,MAAM;AAAA,MACrB,SAAS,MAAM;AAAA,IACjB,CAAC;AACD;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,eAAe;AACd,gBAAQ,cAAc,kBAAkB,UAAU,CAAC;AAAA,MACrD;AAAA,IACF;AACA,WAAO,CAAC;AAAA,EACV;AAAA,EACA,SAAS;AACP,WAAO;AAAA,EACT;AACF,CAAC;AACD,SAAS,aAAa,KAAK;AACzB,QAAM,SAAS,CAAC;AAChB,SAAO,KAAK,GAAG,EAAE,QAAQ,CAAC,MAAM;AAC9B,WAAO,CAAC,IAAI,IAAI,KAAK,cAAc,IAAI,CAAC,CAAC;AAAA,EAC3C,CAAC;AACD,SAAO;AACT;AACA,SAAS,kBAAkB,YAAY;AACrC,SAAO,WAAW,IAAI,CAAC,MAAM;AAC3B,WAAO;AAAA,MACL,GAAG;AAAA,MACH,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC;AAAA,IACzD;AAAA,EACF,CAAC;AACH;AACA,IAAI,gBAAgB,gBAAgB;AAAA,EAClC,MAAM;AAAA,EACN,OAAO;AAAA,IACL,IAAI;AAAA,MACF,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,MAAM,OAAO,EAAE,OAAO,KAAK,GAAG;AAC5B,UAAM,MAAM,OAAO,KAAK;AACxB,QAAI,CAAC,KAAK;AACR,aAAO,CAAC;AAAA,IACV;AACA,UAAM,YAAY,MAAM,IAAI,KAAK;AACjC,eAAW,WAAW,MAAM,EAAE;AAC9B,UAAM,WAAW,IAAI,KAAK,cAAc;AAAA,MACtC,IAAI,MAAM;AAAA,MACV,KAAK;AAAA,MACL,QAAQ,MAAM;AAAA,MACd,QAAQ,aAAa,MAAM,MAAM;AAAA,MACjC,YAAY,kBAAkB,MAAM,UAAU;AAAA,IAChD,CAAC;AACD,aAAS,UAAU,OAAO,IAAI;AAC9B;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,WAAW;AACV,iBAAS,UAAU,MAAM;AAAA,MAC3B;AAAA,IACF;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,WAAW;AACV,iBAAS,UAAU,aAAa,MAAM,CAAC;AAAA,MACzC;AAAA,IACF;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,eAAe;AACd,iBAAS,cAAc,kBAAkB,UAAU,CAAC;AAAA,MACtD;AAAA,IACF;AACA,gBAAY,MAAM;AAChB,eAAS,OAAO,IAAI;AAAA,IACtB,CAAC;AACD,WAAO,CAAC;AAAA,EACV;AAAA,EACA,SAAS;AACP,WAAO;AAAA,EACT;AACF,CAAC;AACD,SAAS,MAAM,YAAY,UAAU;AACnC,SAAO,WAAW,OAAO,CAAC,QAAQ,UAAU;AAC1C,UAAM,MAAM,MAAM,QAAQ;AAC1B,WAAO,GAAG,IAAI;AACd,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACP;AACA,SAAS,qBAAqB,GAAG,GAAG;AAClC,MAAI,IAAI;AACR,MAAI,EAAE,OAAO,EAAE,IAAI;AACjB,WAAO;AAAA,EACT;AACA,MAAI,EAAE,YAAY,EAAE,SAAS;AAC3B,WAAO;AAAA,EACT;AACA,MAAI,EAAE,SAAS,EAAE,MAAM;AACrB,WAAO;AAAA,EACT;AACA,MAAI,EAAE,MAAM,WAAW,EAAE,MAAM,QAAQ;AACrC,QAAI,KAAK,UAAU,EAAE,KAAK,MAAM,KAAK,UAAU,EAAE,KAAK,GAAG;AACvD,aAAO;AAAA,IACT;AAAA,EACF,OAAO;AACL,WAAO;AAAA,EACT;AACA,MAAI,EAAE,eAAe,UAAU,EAAE,eAAe,QAAQ;AACtD,UAAM,gBAAgB,OAAO,KAAK,EAAE,cAAc,CAAC,CAAC;AACpD,UAAM,gBAAgB,OAAO,KAAK,EAAE,cAAc,CAAC,CAAC;AACpD,QAAI,cAAc,WAAW,cAAc,QAAQ;AACjD,aAAO;AAAA,IACT;AACA,aAAS,IAAI,cAAc,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG;AACrD,YAAM,MAAM,cAAc,CAAC;AAC3B,YAAM,KAAK,EAAE,eAAe,OAAO,SAAS,GAAG,GAAG,SAAS,KAAK,EAAE,eAAe,OAAO,SAAS,GAAG,GAAG,IAAI;AACzG,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF,WAAW,EAAE,eAAe,EAAE,YAAY;AACxC,WAAO;AAAA,EACT;AACA,SAAO;AACT;AACA,SAAS,aAAa,KAAK;AACzB,QAAM,SAAS,CAAC;AAChB,SAAO,KAAK,GAAG,EAAE,QAAQ,CAAC,MAAM;AAC9B,WAAO,CAAC,IAAI,IAAI,KAAK,aAAa,IAAI,CAAC,CAAC;AAAA,EAC1C,CAAC;AACD,SAAO;AACT;AACA,SAAS,gBAAgB,YAAY;AACnC,SAAO,WAAW,IAAI,CAAC,MAAM;AAC3B,WAAO;AAAA,MACL,GAAG;AAAA,MACH,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC;AAAA,IACzD;AAAA,EACF,CAAC;AACH;AACA,IAAI,eAAe,gBAAgB;AAAA,EACjC,MAAM;AAAA,EACN,OAAO;AAAA,IACL,IAAI;AAAA,MACF,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,MAAM,OAAO,EAAE,OAAO,KAAK,GAAG;AAC5B,UAAM,MAAM,OAAO,KAAK;AACxB,QAAI,CAAC,KAAK;AACR,aAAO,CAAC;AAAA,IACV;AACA,UAAM,YAAY,MAAM,IAAI,KAAK;AACjC,QAAI,oBAAoB,MAAM;AAC9B,eAAW,WAAW,MAAM,EAAE;AAC9B,UAAM,UAAU,IAAI,KAAK,aAAa;AAAA,MACpC,IAAI,MAAM;AAAA,MACV,KAAK;AAAA,MACL,QAAQ,MAAM;AAAA,MACd,QAAQ,aAAa,MAAM,MAAM;AAAA,MACjC,YAAY,gBAAgB,iBAAiB;AAAA,IAC/C,CAAC;AACD,aAAS,SAAS,OAAO,IAAI;AAC7B;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,WAAW;AACV,gBAAQ,UAAU,MAAM;AAAA,MAC1B;AAAA,IACF;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,WAAW;AACV,gBAAQ,UAAU,aAAa,MAAM,CAAC;AAAA,MACxC;AAAA,IACF;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,eAAe;AACd,cAAM,uBAAuB,MAAM,mBAAmB,IAAI;AAC1D,cAAM,WAAW,IAAI,IAAI,OAAO,KAAK,oBAAoB,CAAC;AAC1D,cAAM,gBAAgB,CAAC;AACvB,mBAAW,QAAQ,CAAC,MAAM;AACxB,cAAI,qBAAqB,EAAE,EAAE,GAAG;AAC9B,qBAAS,OAAO,EAAE,EAAE;AACpB,gBAAI,CAAC,qBAAqB,qBAAqB,EAAE,EAAE,GAAG,CAAC,GAAG;AACxD,4BAAc,KAAK,CAAC;AAAA,YACtB;AAAA,UACF,OAAO;AACL,0BAAc,KAAK,CAAC;AAAA,UACtB;AAAA,QACF,CAAC;AACD,4BAAoB;AACpB,YAAI,SAAS,OAAO,GAAG;AACrB,kBAAQ,OAAO,CAAC,GAAG,QAAQ,CAAC;AAAA,QAC9B;AACA,YAAI,cAAc,SAAS,GAAG;AAC5B,kBAAQ,iBAAiB,gBAAgB,UAAU,CAAC;AAAA,QACtD;AAAA,MACF;AAAA,IACF;AACA,YAAQ,YAAY,OAAO;AAC3B,gBAAY,MAAM;AAChB,cAAQ,OAAO,IAAI;AAAA,IACrB,CAAC;AACD,WAAO,CAAC;AAAA,EACV;AAAA,EACA,SAAS;AACP,WAAO,KAAK,OAAO,UAAU,KAAK,OAAO,QAAQ,IAAI;AAAA,EACvD;AACF,CAAC;AACD,SAAS,aAAa,KAAK;AACzB,QAAM,SAAS,CAAC;AAChB,SAAO,KAAK,GAAG,EAAE,QAAQ,CAAC,MAAM;AAC9B,WAAO,CAAC,IAAI,IAAI,KAAK,WAAW,IAAI,CAAC,CAAC;AAAA,EACxC,CAAC;AACD,SAAO;AACT;AACA,IAAI,aAAa,gBAAgB;AAAA,EAC/B,MAAM;AAAA,EACN,OAAO;AAAA,IACL,IAAI;AAAA,MACF,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,iBAAiB;AAAA,MACf,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,EACF;AAAA,EACA,MAAM,OAAO,EAAE,OAAO,KAAK,GAAG;AAC5B,UAAM,MAAM,OAAO,KAAK;AACxB,QAAI,CAAC,KAAK;AACR,aAAO,CAAC;AAAA,IACV;AACA,UAAM,YAAY,MAAM,IAAI,KAAK;AACjC,eAAW,WAAW,MAAM,EAAE;AAC9B,UAAM,YAAY,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU;AAAA,MAC5C,GAAG;AAAA,MACH,UAAU,IAAI,KAAK,OAAO,KAAK,SAAS,KAAK,KAAK,SAAS,GAAG;AAAA,IAChE,EAAE;AACF,UAAM,gBAAgB,IAAI,KAAK,WAAW;AAAA,MACxC,IAAI,MAAM;AAAA,MACV,KAAK,MAAM,IAAI,KAAK;AAAA,MACpB,QAAQ,aAAa,MAAM,MAAM;AAAA,MACjC,YAAY,UAAU,MAAM,UAAU;AAAA,MACtC,iBAAiB,MAAM;AAAA,IACzB,CAAC;AACD,aAAS,eAAe,OAAO,IAAI;AACnC;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,WAAW;AACV,sBAAc,UAAU,aAAa,MAAM,CAAC;AAAA,MAC9C;AAAA,IACF;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,MAAM;AACL,sBAAc,cAAc,UAAU,CAAC,CAAC;AAAA,MAC1C;AAAA,IACF;AACA,gBAAY,MAAM;AAChB,oBAAc,OAAO,IAAI;AAAA,IAC3B,CAAC;AACD,WAAO,CAAC;AAAA,EACV;AAAA,EACA,SAAS;AACP,WAAO;AAAA,EACT;AACF,CAAC;AACD,SAAS,WAAW,KAAK;AACvB,QAAM,SAAS,CAAC;AAChB,SAAO,KAAK,GAAG,EAAE,QAAQ,CAAC,MAAM;AAC9B,WAAO,CAAC,IAAI,IAAI,KAAK,YAAY,IAAI,CAAC,CAAC;AAAA,EACzC,CAAC;AACD,SAAO;AACT;AACA,IAAI,cAAc,gBAAgB;AAAA,EAChC,MAAM;AAAA,EACN,OAAO;AAAA,IACL,IAAI;AAAA,MACF,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,MAAM,OAAO,EAAE,OAAO,KAAK,GAAG;AAC5B,UAAM,MAAM,OAAO,KAAK;AACxB,QAAI,CAAC,KAAK;AACR,aAAO,CAAC;AAAA,IACV;AACA,UAAM,YAAY,MAAM,IAAI,KAAK;AACjC,eAAW,WAAW,MAAM,EAAE;AAC9B,UAAM,YAAY,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU;AAAA,MAC5C,GAAG;AAAA,MACH,QAAQ,IAAI,KAAK,OAAO,KAAK,OAAO,KAAK,KAAK,OAAO,GAAG;AAAA,IAC1D,EAAE;AACF,UAAM,SAAS,IAAI,KAAK,YAAY;AAAA,MAClC,IAAI,MAAM;AAAA,MACV,KAAK;AAAA,MACL,QAAQ,WAAW,MAAM,MAAM;AAAA,MAC/B,YAAY,UAAU,MAAM,UAAU;AAAA,MACtC,QAAQ;AAAA,IACV,CAAC;AACD,aAAS,QAAQ,OAAO,IAAI;AAC5B;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,WAAW;AACV,eAAO,UAAU,MAAM;AAAA,MACzB;AAAA,IACF;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,WAAW;AACV,eAAO,UAAU,WAAW,MAAM,CAAC;AAAA,MACrC;AAAA,IACF;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,MAAM;AACL,eAAO,cAAc,UAAU,CAAC,CAAC;AAAA,MACnC;AAAA,IACF;AACA,gBAAY,MAAM;AAChB,aAAO,OAAO,IAAI;AAAA,IACpB,CAAC;AACD,WAAO,CAAC;AAAA,EACV;AAAA,EACA,SAAS;AACP,WAAO;AAAA,EACT;AACF,CAAC;AACD,IAAM,cAAc,CAAC,eAAe;AAClC,SAAO,IAAI,KAAK,OAAO,WAAW,KAAK,WAAW,GAAG;AACvD;AACA,IAAI,aAAa,gBAAgB;AAAA,EAC/B,MAAM;AAAA,EACN,OAAO;AAAA,IACL,IAAI;AAAA,MACF,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS,OAAO,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,IAC/B;AAAA,IACA,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,EACF;AAAA,EACA,OAAO,CAAC,aAAa;AAAA,EACrB,MAAM,OAAO,EAAE,KAAK,GAAG;AACrB,UAAM,MAAM,OAAO,KAAK;AACxB,QAAI,CAAC,KAAK;AACR,aAAO,CAAC;AAAA,IACV;AACA,UAAM,YAAY,MAAM,IAAI,KAAK;AACjC,eAAW,WAAW,MAAM,EAAE;AAC9B,UAAM,SAAS,YAAY,MAAM,QAAQ;AACzC,UAAM,aAAa,IAAI,KAAK,WAAW;AAAA,MACrC,KAAK,MAAM,IAAI,KAAK;AAAA,MACpB,UAAU;AAAA,MACV,SAAS,MAAM;AAAA,MACf,QAAQ,MAAM;AAAA,MACd,QAAQ,MAAM;AAAA,MACd,cAAc,MAAM;AAAA,IACtB,CAAC;AACD,eAAW,GAAG,cAAc,MAAM;AAChC,WAAK,aAAa;AAAA,IACpB,CAAC;AACD;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,MAAM;AACL,YAAI,GAAG;AACL,qBAAW,KAAK;AAAA,QAClB,OAAO;AACL,qBAAW,MAAM;AAAA,QACnB;AAAA,MACF;AAAA,IACF;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,MAAM;AACL,mBAAW,WAAW,CAAC;AAAA,MACzB;AAAA,IACF;AACA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,MAAM;AACL,mBAAW,YAAY,YAAY,CAAC,CAAC;AAAA,MACvC;AAAA,IACF;AACA,gBAAY,MAAM;AAChB,iBAAW,QAAQ;AAAA,IACrB,CAAC;AACD,WAAO,CAAC;AAAA,EACV;AAAA,EACA,SAAS;AACP,WAAO;AAAA,EACT;AACF,CAAC;AACD,IAAI,gBAAgB,gBAAgB;AAAA,EAClC,MAAM;AAAA,EACN,OAAO;AAAA,IACL,IAAI;AAAA,MACF,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,gBAAgB;AAAA,MACd,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,iBAAiB;AAAA,MACf,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,IACR;AAAA,EACF;AAAA,EACA,OAAO,CAAC,qBAAqB,UAAU,OAAO;AAAA,EAC9C,MAAM,OAAO,EAAE,KAAK,GAAG;AACrB,UAAM,MAAM,OAAO,KAAK;AACxB,QAAI,CAAC,KAAK;AACR,aAAO,CAAC;AAAA,IACV;AACA,UAAM,YAAY,MAAM,IAAI,KAAK;AACjC,eAAW,WAAW,MAAM,EAAE;AAC9B,UAAM,aAAa,gBAAgB,MAAM,UAAU;AACnD,UAAM,UAAU,IAAI,KAAK,aAAa;AAAA,MACpC,IAAI,MAAM;AAAA,MACV,KAAK;AAAA,MACL,QAAQ,MAAM;AAAA,MACd,QAAQ,aAAa,MAAM,MAAM;AAAA,MACjC;AAAA,IACF,CAAC;AACD,UAAM,SAAS,IAAI,KAAK,MAAM,eAAe;AAAA,MAC3C,KAAK;AAAA,MACL,aAAa;AAAA,QACX;AAAA,UACE,SAAS;AAAA,UACT,IAAI,MAAM;AAAA,UACV,gBAAgB,MAAM;AAAA,UACtB,iBAAiB,MAAM;AAAA,QACzB;AAAA,MACF;AAAA,MACA,YAAY,MAAM,eAAe,IAAI,KAAK,MAAM,UAAU,cAAc,WAAW,KAAK,MAAM,UAAU,cAAc;AAAA,MACtH,iBAAiB,MAAM;AAAA,MACvB,YAAY;AAAA,MACZ,WAAW,MAAM;AAAA,IACnB,CAAC;AACD,WAAO,GAAG,UAAU,MAAM;AACxB,WAAK,UAAU,OAAO,gBAAgB,CAAC;AAAA,IACzC,CAAC;AACD,WAAO,GAAG,iBAAiB,CAAC,MAAM;AAChC,WAAK,qBAAqB,CAAC,GAAG,MAAM,YAAY,CAAC,CAAC;AAAA,IACpD,CAAC;AACD,WAAO,GAAG,mBAAmB,CAAC,MAAM;AAClC,eAAS,IAAI,MAAM,WAAW,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG;AACxD,YAAI,MAAM,WAAW,CAAC,EAAE,OAAO,EAAE,IAAI;AACnC,iBAAO,OAAO,MAAM,WAAW,CAAC,GAAG,CAAC;AACpC,eAAK,qBAAqB,CAAC,GAAG,MAAM,UAAU,CAAC;AAC/C;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AACD,WAAO,GAAG,mBAAmB,CAAC,MAAM;AAClC,YAAM,aAAa,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE;AACpC;AAAA,QACE;AAAA,QACA,MAAM,WAAW,OAAO,CAAC,MAAM,WAAW,QAAQ,EAAE,EAAE,MAAM,EAAE;AAAA,MAChE;AACA,WAAK,UAAU,OAAO,gBAAgB,CAAC;AAAA,IACzC,CAAC;AACD,WAAO,GAAG,kBAAkB,CAAC,MAAM;AACjC,YAAM,gBAAgB,OAAO,iBAAiB;AAC9C,WAAK,qBAAqB;AAAA,QACxB,GAAG,cAAc,QAAQ,cAAc;AAAA,QACvC,GAAG;AAAA,MACL,CAAC;AACD,WAAK,UAAU,OAAO,gBAAgB,CAAC;AAAA,IACzC,CAAC;AACD,WAAO,GAAG,kBAAkB,CAAC,MAAM;AACjC,YAAM,gBAAgB,OAAO,iBAAiB;AAC9C,WAAK,qBAAqB,CAAC,GAAG,cAAc,QAAQ,cAAc,GAAG,CAAC,CAAC;AACvE,WAAK,UAAU,OAAO,gBAAgB,CAAC;AAAA,IACzC,CAAC;AACD,WAAO,GAAG,cAAc,CAAC,MAAM;AAC7B,WAAK,SAAS,CAAC;AAAA,IACjB,CAAC;AACD,WAAO,GAAG,cAAc,CAAC,MAAM;AAC7B,WAAK,SAAS,CAAC;AAAA,IACjB,CAAC;AACD;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,eAAe;AACd,cAAM,IAAI,eAAe,IAAI,KAAK,MAAM,UAAU,cAAc,WAAW,KAAK,MAAM,UAAU,cAAc;AAC9G,eAAO,cAAc,CAAC;AAAA,MACxB;AAAA,IACF;AACA,gBAAY,MAAM;AAChB,cAAQ,OAAO,IAAI;AACnB,UAAI;AACF,eAAO,QAAQ;AAAA,MACjB,SAAS,GAAP;AAAA,MACF;AAAA,IACF,CAAC;AACD,WAAO;AAAA,MACL,QAAQ,OAAO,OAAO,KAAK,MAAM;AAAA,MACjC,MAAM,OAAO,KAAK,KAAK,MAAM;AAAA,MAC7B,OAAO,OAAO,MAAM,KAAK,MAAM;AAAA,MAC/B,OAAO,OAAO,MAAM,KAAK,MAAM;AAAA,MAC/B,QAAQ,OAAO,OAAO,KAAK,MAAM;AAAA,MACjC,SAAS,OAAO,QAAQ,KAAK,MAAM;AAAA,IACrC;AAAA,EACF;AAAA,EACA,SAAS;AACP,WAAO;AAAA,EACT;AACF,CAAC;AACD,IAAM,YAAY,CAAC,eAAe;AAChC,SAAO,IAAI,KAAK,OAAO,WAAW,KAAK,WAAW,GAAG;AACvD;AACA,IAAI,aAAa,gBAAgB;AAAA,EAC/B,MAAM;AAAA,EACN,OAAO;AAAA,IACL,IAAI;AAAA,MACF,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS,MAAM,CAAC,GAAG,CAAC;AAAA,IACtB;AAAA,EACF;AAAA,EACA,MAAM,OAAO,EAAE,MAAM,GAAG;AACtB,UAAM,MAAM,OAAO,KAAK;AACxB,QAAI,CAAC,KAAK;AACR,aAAO,CAAC;AAAA,IACV;AACA,UAAM,YAAY,MAAM,IAAI,KAAK;AACjC,eAAW,WAAW,MAAM,EAAE;AAC9B,UAAM,SAAS,IAAI,SAAS,cAAc,KAAK,CAAC;AAChD,UAAM,WAAW,SAAS,MAAM;AAC9B,aAAO,UAAU,UAAU,MAAM,QAAQ,CAAC;AAAA,IAC5C,CAAC;AACD,UAAM,iBAAiB,KAAK,WAAW;AAAA,MACrC,YAAY,SAAS;AACnB,cAAM,OAAO;AACb,aAAK,MAAM,QAAQ;AACnB,aAAK,OAAO,OAAO;AAAA,MACrB;AAAA,MACA,OAAO,SAAS;AACd,aAAK,MAAM,QAAQ;AAAA,MACrB;AAAA,MACA,YAAY;AACV,eAAO,KAAK;AAAA,MACd;AAAA,MACA,YAAY;AACV,cAAM,QAAQ,KAAK,IAAI,mBAAmB,SAAS,KAAK;AACxD,cAAM,OAAO,GAAG,MAAM,KAAK,IAAI,KAAK,IAAI,cAAc,IAAI,MAAM,OAAO,CAAC;AACxE,cAAM,OAAO,GAAG,MAAM,KAAK,IAAI,KAAK,IAAI,eAAe,IAAI,MAAM,OAAO,CAAC;AACzE,aAAK,IAAI;AAAA,UACP;AAAA,UACA,QAAQ,eAAe;AAAA,QACzB;AAAA,MACF;AAAA,MACA,YAAY;AACV,aAAK,IAAI,YAAY;AAAA,MACvB;AAAA,IACF;AACA,QAAI;AACJ,cAAU,MAAM;AACd,eAAS,IAAI,SAAS;AAAA,QACpB,KAAK,IAAI;AAAA,QACT,KAAK,OAAO;AAAA,MACd,CAAC;AAAA,IACH,CAAC;AACD;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,MAAM;AACJ,eAAO,UAAU;AAAA,MACnB;AAAA,IACF;AACA,gBAAY,MAAM;AAChB,aAAO,UAAU;AAAA,IACnB,CAAC;AACD,WAAO,MAAM;AAAA,MACX;AAAA,MACA;AAAA,QACE,KAAK;AAAA,MACP;AAAA,MACA,MAAM,UAAU,MAAM,QAAQ,IAAI,CAAC;AAAA,IACrC;AAAA,EACF;AACF,CAAC;AACD,IAAM,aAAa;AAAA,EACjB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,IAAM,UAAU,CAAC,QAAQ;AACvB,aAAW,QAAQ,CAAC,cAAc;AAChC,QAAI,UAAU,UAAU,MAAM,SAAS;AAAA,EACzC,CAAC;AACH;",
  "names": []
}
