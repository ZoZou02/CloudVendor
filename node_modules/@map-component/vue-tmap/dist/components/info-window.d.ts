/// <reference types="@map-component/tmap-types" />
/// <reference types="@map-component/tmap-types" />
import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    id: {
        type: StringConstructor;
        default: string;
    };
    visible: {
        type: BooleanConstructor;
        required: true;
    };
    position: {
        type: PropType<TMap.LatLngData>;
        required: true;
    };
    content: {
        type: StringConstructor;
        required: true;
    };
    zIndex: {
        type: NumberConstructor;
        required: false;
        default: number;
    };
    offset: {
        type: PropType<TMap.Offset>;
        required: false;
        default: () => {
            x: number;
            y: number;
        };
    };
    enableCustom: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "close-click"[], "close-click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    id: {
        type: StringConstructor;
        default: string;
    };
    visible: {
        type: BooleanConstructor;
        required: true;
    };
    position: {
        type: PropType<TMap.LatLngData>;
        required: true;
    };
    content: {
        type: StringConstructor;
        required: true;
    };
    zIndex: {
        type: NumberConstructor;
        required: false;
        default: number;
    };
    offset: {
        type: PropType<TMap.Offset>;
        required: false;
        default: () => {
            x: number;
            y: number;
        };
    };
    enableCustom: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
}>> & {
    "onClose-click"?: ((...args: any[]) => any) | undefined;
}, {
    offset: TMap.Offset;
    id: string;
    zIndex: number;
    enableCustom: boolean;
}, {}>;
export default _default;
