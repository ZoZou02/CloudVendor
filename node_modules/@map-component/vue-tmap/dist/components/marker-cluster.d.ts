/// <reference types="@map-component/tmap-types" />
import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    id: {
        type: StringConstructor;
        default: string;
    };
    enableDefaultStyle: {
        type: BooleanConstructor;
        default: boolean;
    };
    minimumClusterSize: {
        type: NumberConstructor;
        default: number;
    };
    geometries: {
        type: PropType<TMap.PointGeometry<any>[]>;
        required: true;
    };
    zoomOnClick: {
        type: BooleanConstructor;
        default: boolean;
    };
    gridSize: {
        type: NumberConstructor;
        default: number;
    };
    averageCenter: {
        type: BooleanConstructor;
        default: boolean;
    };
    maxZoom: {
        type: NumberConstructor;
        default: number;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    id: {
        type: StringConstructor;
        default: string;
    };
    enableDefaultStyle: {
        type: BooleanConstructor;
        default: boolean;
    };
    minimumClusterSize: {
        type: NumberConstructor;
        default: number;
    };
    geometries: {
        type: PropType<TMap.PointGeometry<any>[]>;
        required: true;
    };
    zoomOnClick: {
        type: BooleanConstructor;
        default: boolean;
    };
    gridSize: {
        type: NumberConstructor;
        default: number;
    };
    averageCenter: {
        type: BooleanConstructor;
        default: boolean;
    };
    maxZoom: {
        type: NumberConstructor;
        default: number;
    };
}>>, {
    maxZoom: number;
    id: string;
    enableDefaultStyle: boolean;
    minimumClusterSize: number;
    zoomOnClick: boolean;
    gridSize: number;
    averageCenter: boolean;
}, {}>;
export default _default;
