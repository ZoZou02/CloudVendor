type Rect = {
	left?:number,
	top?:number,
	heigth?:number,
	width?:number,
	[k:string]:any
}
type Owh = {
	offsetWidth:number,
	offsetHeight:number
}
export default function(wh:Owh,rect:Rect,opt:{
	dir?:string,//vt|hr
	top?:boolean //是否顶层
}={}){
	const {left,top,height,width} = rect as Record<string,number>
	const {clientHeight,clientWidth} = document.documentElement
	const 
		oh = wh.offsetHeight,
		ow = wh.offsetWidth;
	let x:number|undefined,y:number|undefined;
	const vt = ()=>{
		if(top+height+oh>clientHeight){
			if(top-oh<0){
				y = opt.top?clientHeight-oh:clientHeight-top-height-oh
			}else
				y = opt.top?top-oh:-oh
			
		}else{
			y = opt.top?top+height:height
		}
	}
	const hr = ()=>{
		if(left+ow>clientWidth){
			x = opt.top?clientWidth-ow:clientWidth-left-ow
		}else if(left<0){
			x = opt.top?0:-left
		}else 
			x = opt.top?left:0
	}
	switch(opt.dir){
		case 'vt':{
			vt()
			break
		}
		case 'hr':{
			hr()
			break
		}
		default:
			vt();
			hr();
	}
	if(x===undefined)
		x = opt.top?left:0
	if(y===undefined)
		y = opt.top?top+height:height
	return {x,y}
}