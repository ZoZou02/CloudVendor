export function checkMobile():boolean{
    return !!navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i)
}
export function supportTouch (){
    return !!(("ontouchstart" in window) 
    || window.navigator && window.navigator.msPointerEnabled && window.MSGesture 
    || (window as any).DocumentTouch && document instanceof (window as any).DocumentTouch)
}
export function getTouchEvents(){
    const touch= supportTouch()
    return {
        touchstart : touch?'touchstart':'mousedown',
        touchmove : touch?'touchmove':'mousemove',
        touchend : touch?'touchend':'mouseup'
    }
}
export const Reg={
    email:/^[a-z0-9A-Z]+[- | a-z0-9A-Z . _]+@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\.)+[a-z]{2,}$/,
    url:/https?:\/\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]/,
    mobile:/^1([358][0-9]|4[579]|66|7[0135678]|9[89])[0-9]{8}$/,
    chinese:/^[\u0391-\uFFE5]+$/
}
export function uuid():string{
    return Math.random().toString().substr(2)
}
export function noop():void{1}
export function isEmpty(v:unknown){
    return v===undefined||v===""||v===null||(v instanceof Array&&v.join("")==="")
}
export function isUndef(a:unknown):boolean{
    return a===undefined||a===null
}
export function format(obj:Record<string,unknown>,format:string):string{
    return format.replace(/\$\{(\w+)\}/g,(a,b)=>obj[b]+"")
}
export function isNumber(a:unknown):boolean{
    return a!==undefined&&
            a!==''&&
            a!==null&&
            (typeof a !== "boolean")&&
            (typeof a !== "object")&&
            !isNaN(a as number)
}